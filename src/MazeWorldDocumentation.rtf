{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Maze by Jorge and Roman\
\
W, A, S, D to move\
\
M for depth first search\
N for breadth first search\
\
Enter to reset the maze.\
\
Structure Outline:\
Each vertex represents a corner where the walls of the maze meet. The vertex class uses booleans to determine whether or not their is a path beneath, above, or to the side of the.\
\
Each edge represents a wall of the maze.\
\
The outer edges of the maze are made up of Edge\'92s, and using krystal\'92s algorithm we had it generate the walls to our maze.\
\
We used a hash map to determine how the tree should look in the buildWalls method in the MazeWorld class.\
\
The player has their own Class called player which just includes their position and their current vertex.}